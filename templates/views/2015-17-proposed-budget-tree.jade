
.container
  style.
    #treemap{
    display: block;
    max-width: 100%;
    margin: auto;
    padding-top: 10px;
    }
    #breadcrumbs {
    margin: 0px;
    padding: 0px;
    cursor:pointer;
    }
    #table {
    display: block;
    max-width: 100%;
    margin: auto;
    }
    #tooltip p {
    margin: 0px;
    padding: 0px;
    }
    .amount {
    padding: 0px;
    margin: 0px;
    font-size: medium;
    font-family: "Open Sans", Helvetica, Arial, sans-serif;
    }
    .name {
    padding: 0px;
    margin: 0px;
    font-size: small ;
    font-family: "Open Sans", Helvetica, Arial, sans-serif;
    }
    #spacer {
    height: 30px;
    }
  .row
    .intro.col-md-8
      h1 Mayor's Proposed Budget 2015 - 2017

      p Select year and account (revenues or expenses). Click on a fund to see the departments that receive its funding. Click on that department to see its spending or revenue.

      p The <strong>General Fund</strong> â€” roughly 40% of Oakland's total budget -- is decided by a <a href="/budget-process.html">budget process</a> that includes private and public meetings, surveys, and negotiations. The other 60% of the budget comes from taxes, ballot measures, grants, fees, and other sources.

  .row
    .col-sm-12
      p#breadcrumbs 
  .row
    .col-sm-6
      h3#title title
    .col-sm-6#dropdown
  #treemap
  #spacer
  #table(style="margin-bottom: 30px;")




  section#comments
    .row
      .col-md-8
        h4 Comments
        #disqus_thread

//- DISQUS script
script(type='text/javascript').
  function backHome() {
  document.getElementById('treewidget11-13').src = document.getElementById('treewidget11-13').src;
  }
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'openbudgetoakland'; // required: replace example with your forum shortname
  var disqus_identifier = "MayorsBudget1517";
  /* * * DON'T EDIT BELOW THIS LINE * * */
  (function() {
  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
  dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
  })();
noscript
  | Please enable JavaScript to view the
  a(href='http://disqus.com/?ref_noscript') comments powered by Disqus.

script(src='http://d3js.org/d3.v3.min.js', charset='utf-8')
script(src='/js/palette.js', charset='utf-8')
script(src='/js/source.js', charset='utf-8')
script(src='/js/data.js', charset='utf-8')
script(src='/js/treemap.js', charset='utf-8')
script(src='/js/spreadsheet.js', charset='utf-8')
script(src='/js/tooltip.js', charset='utf-8')
script(src='/js/budget-treemap.js', charset='utf-8')
script.
  var config = {
    /* set values available in dropdown files */
    dropdown_values: {
      "Year": ["FY15-16", "FY16-17"],
      "Account": ["Revenue", "Expense"]
    },
    /* set the default values */
    dropdown_choice: {
      "Year": "FY15-16",
      "Account": "Expense"
    },
    /* create the url to the data file based on the dropdown choices */
    url: function() {
      return 'data/2015-2017-mayors-proposed/' + this.dropdown_choice["Account"] + "." + this.dropdown_choice["Year"] + ".json";
    }
  };

  function _hash_normalize(s) {
    return s.toLowerCase().replace(/\s+/g, '');
  }

  function _hash_compare(v1, v2) {
    return _hash_normalize(v1) == _hash_normalize(v2) ? 0 : 1;
  }

  function _parse_hash(hash) {
    function _parse_hash_dropdown(arr, category) {
      if (arr.length) {
        var x = arr.shift();
        /* see if hash array value matches to dropdown value, and set value
         * it matches */
        var idx = ob.data.findIndex(
          config.dropdown_values[category], x, _hash_compare);
        if (idx > -1) {
          config.dropdown_choice[category] = config.dropdown_values[category][idx];
        }
      }
    }

    var hash_array = hash.split(".");
    _parse_hash_dropdown(hash_array, "Year");
    _parse_hash_dropdown(hash_array, "Account");
    return hash_array.join(".");
  }

  /* need to parse hash on load before creating treemap to make sure we 
   * don't set the dropdown values before reading them from the hash */
  _parse_hash(window.location.hash.replace("#",""));

  /* get width of container */
  var parent = d3.select(".container");
  var width = parent.node().offsetWidth - parseInt(parent.style("padding-left")) - parseInt(parent.style("padding-right"));


  /* create display */
  ob.display.budget_treemap()
    .width(width)
    .height(600)
    .count(40)
    .config(config)
    .dropdown("#dropdown")
    .spreadsheet("#table")
    .treemap("#treemap")
    .title("#title")
    .breadcrumbs("#breadcrumbs")
    .hashnorm(_hash_normalize)
    .hashcmp(_hash_compare)
    .on("set_hash", function(hash) {
      /* add year and account to hash for linking */
      var prefix = _hash_normalize(config.dropdown_choice["Year"]) + 
        "." + 
        _hash_normalize(config.dropdown_choice["Account"]);
      return hash.length ? prefix + "." + hash : prefix;
    })
    .on("get_hash", function(hash) { return _parse_hash(hash); })
    .url(config.url())
    .create();

